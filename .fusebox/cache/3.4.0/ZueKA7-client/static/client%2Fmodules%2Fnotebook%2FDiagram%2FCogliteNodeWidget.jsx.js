module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Input_1 = require(\"@material-ui/icons/Input\");\r\nconst Functions_1 = require(\"@material-ui/icons/Functions\");\r\nconst Pageview_1 = require(\"@material-ui/icons/Pageview\");\r\nconst core_1 = require(\"@material-ui/core\");\r\nconst Divider_1 = require(\"@material-ui/core/Divider\");\r\nconst IconButton_1 = require(\"@material-ui/core/IconButton\");\r\nconst Typography_1 = require(\"@material-ui/core/Typography\");\r\nconst React = require(\"react\");\r\nconst storm_react_diagrams_1 = require(\"storm-react-diagrams\");\r\nconst react_jss_1 = require(\"react-jss\");\r\nexports.style = theme => ({\r\n    cardBasic: {\r\n        display: \"flex\",\r\n        position: \"relative\",\r\n    },\r\n    details: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        minWidth: 180,\r\n    },\r\n    content: {\r\n        flex: \"1 0 auto\",\r\n        backgroundColor: \"white\",\r\n    },\r\n    controls: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        paddingLeft: theme.spacing.unit,\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    playIcon: {\r\n        height: 38,\r\n        width: 38,\r\n    },\r\n    headerText: {\r\n        paddingRight: 10,\r\n    },\r\n    name: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    leftCenter: {\r\n        position: \"absolute\",\r\n        zIndex: 10,\r\n        left: -5,\r\n        top: `calc(100% / 2)`,\r\n    },\r\n    rightCenter: {\r\n        position: \"absolute\",\r\n        zIndex: 10,\r\n        left: `calc(100% - 5px)`,\r\n        top: `calc(100% / 2)`,\r\n    }\r\n});\r\nclass CogliteNodeWidgetBase extends storm_react_diagrams_1.BaseWidget {\r\n    constructor(props) {\r\n        super(\"srd-coglite-node\", props);\r\n        this.state = {};\r\n    }\r\n    getNodeHeaders(cogType) {\r\n        let nodeHeaderIcon = null;\r\n        let nodeHeaderText = null;\r\n        if (cogType === \"cogliteInput\") {\r\n            nodeHeaderIcon = React.createElement(Input_1.default, null);\r\n            nodeHeaderText = 'Input Node';\r\n        }\r\n        else if (cogType === \"cogliteFunctionMath\") {\r\n            nodeHeaderIcon = React.createElement(Functions_1.default, null);\r\n            nodeHeaderText = 'Function Node';\r\n        }\r\n        else {\r\n            nodeHeaderIcon = React.createElement(Pageview_1.default, null);\r\n            nodeHeaderText = 'Debug Node';\r\n        }\r\n        return {\r\n            'nodeHeaderIcon': nodeHeaderIcon,\r\n            'nodeHeaderText': nodeHeaderText\r\n        };\r\n    }\r\n    render() {\r\n        const { classes, theme, node } = this.props;\r\n        node.color = node.color || theme.palette.common.white;\r\n        const nodeHeaders = this.getNodeHeaders(node.cogType);\r\n        const rightPorts = (React.createElement(\"div\", null,\r\n            React.createElement(\"div\", { className: classes.rightCenter },\r\n                React.createElement(storm_react_diagrams_1.PortWidget, { name: \"rightCenter\", node: node }))));\r\n        const leftPorts = (React.createElement(\"div\", null,\r\n            React.createElement(\"div\", { className: classes.leftCenter },\r\n                React.createElement(storm_react_diagrams_1.PortWidget, { name: \"leftCenter\", node: node }))));\r\n        return (React.createElement(\"div\", { className: classes.cardBasic },\r\n            React.createElement(core_1.Card, { className: classes.details },\r\n                React.createElement(\"div\", null,\r\n                    React.createElement(\"div\", { className: classes.controls },\r\n                        React.createElement(IconButton_1.default, { \"aria-label\": \"Previous\", className: classes.playIcon }, nodeHeaders.nodeHeaderIcon),\r\n                        React.createElement(Typography_1.default, { variant: \"subheading\", className: classes.headerText }, nodeHeaders.nodeHeaderText))),\r\n                React.createElement(Divider_1.default, null),\r\n                React.createElement(\"div\", null,\r\n                    React.createElement(core_1.CardContent, { className: classes.content },\r\n                        React.createElement(Typography_1.default, { component: \"p\", className: classes.name }, node.name)))),\r\n            node.cogType === \"cogliteInput\" || node.cogType === \"cogliteFunctionMath\" ? rightPorts : null,\r\n            node.cogType === \"cogliteDebug\" || node.cogType === \"cogliteFunctionMath\" ? leftPorts : null));\r\n    }\r\n}\r\nexports.CogliteNodeWidgetBase = CogliteNodeWidgetBase;\r\nexports.CogliteNodeWidget = react_jss_1.default(exports.style)(CogliteNodeWidgetBase);\r\n",
dependencies: ["@material-ui/icons/Input","@material-ui/icons/Functions","@material-ui/icons/Pageview","@material-ui/core","@material-ui/core/Divider","@material-ui/core/IconButton","@material-ui/core/Typography","react","storm-react-diagrams","react-jss"],
sourceMap: {},
headerContent: undefined,
mtime: 1535400689170,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
