module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _ = require(\"lodash\");\r\nconst uischema_1 = require(\"../models/uischema\");\r\nconst path_1 = require(\"./path\");\r\nconst resolvers_1 = require(\"./resolvers\");\r\nexports.evalVisibility = (uischema, data) => {\r\n    if (!_.has(uischema, 'rule.condition')) {\r\n        return true;\r\n    }\r\n    const condition = uischema.rule.condition;\r\n    const value = resolvers_1.resolveData(data, path_1.toDataPath(condition.scope));\r\n    const equals = value === condition.expectedValue;\r\n    switch (uischema.rule.effect) {\r\n        case uischema_1.RuleEffect.HIDE: return !equals;\r\n        case uischema_1.RuleEffect.SHOW: return equals;\r\n        default:\r\n            return true;\r\n    }\r\n};\r\nexports.evalEnablement = (uischema, data) => {\r\n    if (!_.has(uischema, 'rule.condition')) {\r\n        return true;\r\n    }\r\n    const condition = uischema.rule.condition;\r\n    const value = resolvers_1.resolveData(data, path_1.toDataPath(condition.scope));\r\n    const equals = value === condition.expectedValue;\r\n    switch (uischema.rule.effect) {\r\n        case uischema_1.RuleEffect.DISABLE: return !equals;\r\n        case uischema_1.RuleEffect.ENABLE: return equals;\r\n        default:\r\n            return true;\r\n    }\r\n};\r\nexports.isVisible = (props, store) => {\r\n    if (props.uischema.rule) {\r\n        return exports.evalVisibility(props.uischema, store.coreStore.extractData);\r\n    }\r\n    return true;\r\n};\r\nexports.isEnabled = (props, store) => {\r\n    if (props.uischema.rule) {\r\n        return exports.evalEnablement(props.uischema, store.coreStore.extractData);\r\n    }\r\n    return true;\r\n};\r\n",
dependencies: ["lodash","../models/uischema","./path","./resolvers"],
sourceMap: {},
headerContent: undefined,
mtime: 1535400689473,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
