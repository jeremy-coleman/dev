module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nconst AccessTime_1 = require(\"@material-ui/icons/AccessTime\");\r\nconst DateRange_1 = require(\"@material-ui/icons/DateRange\");\r\nconst KeyboardArrowLeft_1 = require(\"@material-ui/icons/KeyboardArrowLeft\");\r\nconst KeyboardArrowRight_1 = require(\"@material-ui/icons/KeyboardArrowRight\");\r\nconst material_ui_pickers_1 = require(\"material-ui-pickers\");\r\nconst mobx_react_1 = require(\"mobx-react\");\r\nconst React = require(\"react\");\r\nconst core_1 = require(\"../../core\");\r\nconst react_1 = require(\"../../react\");\r\nclass MaterialDateTimeControl extends react_1.Control {\r\n    render() {\r\n        const { id, description, errors, label, uischema, visible, enabled, required, path, handleChange, data, config } = this.props;\r\n        const isValid = errors.length === 0;\r\n        const trim = config.trim;\r\n        let style = {};\r\n        if (!visible) {\r\n            style = { display: 'none' };\r\n        }\r\n        const inputProps = {};\r\n        return (React.createElement(material_ui_pickers_1.DateTimePicker, { id: id, label: core_1.computeLabel(core_1.isPlainLabel(label) ? label : label.default, required), error: !isValid, style: style, fullWidth: !trim, onFocus: this.onFocus, onBlur: this.onBlur, helperText: !isValid ? errors : description, InputLabelProps: { shrink: true, }, value: data || null, onChange: datetime => handleChange(path, datetime ? datetime : ''), format: 'MM/DD/YYYY h:mm a', clearable: true, disabled: !enabled, autoFocus: uischema.options && uischema.options.focus, leftArrowIcon: React.createElement(KeyboardArrowLeft_1.default, null), rightArrowIcon: React.createElement(KeyboardArrowRight_1.default, null), dateRangeIcon: React.createElement(DateRange_1.default, null), timeIcon: React.createElement(AccessTime_1.default, null), onClear: () => handleChange(path, ''), InputProps: inputProps }));\r\n    }\r\n}\r\nexports.MaterialDateTimeControl = MaterialDateTimeControl;\r\nexports.materialDateTimeControlTester = core_1.rankWith(2, core_1.isDateTimeControl);\r\nlet MaterializedDateTimeControl = class MaterializedDateTimeControl extends React.Component {\r\n    render() {\r\n        const effectiveProps = react_1.createPropsForItem(this.props, core_1.mapStoreValuesToControlProps, core_1.mapUpdateActionToControlProps);\r\n        return (React.createElement(MaterialDateTimeControl, Object.assign({}, effectiveProps)));\r\n    }\r\n};\r\nMaterializedDateTimeControl = tslib_1.__decorate([\r\n    mobx_react_1.inject(\"jsonFormsStore\"),\r\n    mobx_react_1.observer\r\n], MaterializedDateTimeControl);\r\nexports.default = MaterializedDateTimeControl;\r\n",
dependencies: ["tslib","@material-ui/icons/AccessTime","@material-ui/icons/DateRange","@material-ui/icons/KeyboardArrowLeft","@material-ui/icons/KeyboardArrowRight","material-ui-pickers","mobx-react","react","../../core","../../react"],
sourceMap: {},
headerContent: undefined,
mtime: 1535400689550,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
