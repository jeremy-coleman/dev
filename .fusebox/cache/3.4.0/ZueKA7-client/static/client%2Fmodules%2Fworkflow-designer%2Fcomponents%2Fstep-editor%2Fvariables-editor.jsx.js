module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b;\r\nconst React = require(\"react\");\r\nconst mobx_1 = require(\"mobx\");\r\nconst mobx_react_1 = require(\"mobx-react\");\r\nconst fa_1 = require(\"react-icons/fa\");\r\nconst options_1 = require(\"../options\");\r\nconst workflow_1 = require(\"../../models/workflow\");\r\nconst style_1 = require(\"../../style\");\r\nlet injectSheet = require('react-jss').default;\r\nconst jssStyles = (theme) => ({\r\n    fieldBlock: {\r\n        composes: 'pure-g block-force base-border-color component-padding-bottom',\r\n        borderBottomWidth: '1px',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomColor: theme.ide ? undefined : '#ddd',\r\n        paddingBottom: '10px',\r\n        '&:last-child': {\r\n            borderBottom: 'none',\r\n            paddingBottom: '0px'\r\n        },\r\n    },\r\n    editorDiv: {\r\n        composes: 'pure-u-1 pure-u-lg-5-6'\r\n    },\r\n    optionSettings: {\r\n        composes: 'pure-u-1 pure-u-lg-1-6',\r\n        textAlign: 'right',\r\n        paddingLeft: '0px',\r\n        [style_1.mediaQueries.lg]: {\r\n            paddingLeft: '10px'\r\n        }\r\n    },\r\n    options: {\r\n        '& > .btn-group': {\r\n            width: '100%',\r\n            '& > button': {\r\n                width: '50%'\r\n            }\r\n        }\r\n    },\r\n    deleteButton: {\r\n        composes: theme.ide ? 'btn btn-error btn-block' : 'pure-button danger',\r\n        width: '100%',\r\n        display: 'block',\r\n        '& > svg': {\r\n            position: 'relative',\r\n            display: 'inline-block',\r\n            top: '-0.10em'\r\n        }\r\n    }\r\n});\r\nclass EditorState {\r\n    constructor(variables, source, committed, sourceType) {\r\n        this.variables = variables;\r\n        this.source = source;\r\n        this.committed = committed;\r\n        this.sourceType = sourceType;\r\n    }\r\n    commitIfNecessary() {\r\n        if (!this.committed) {\r\n            this.variables.push(this.source);\r\n            this.committed = true;\r\n        }\r\n    }\r\n}\r\nexports.EditorState = EditorState;\r\nlet VariablesEditor = class VariablesEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentWillMount() {\r\n        this.setState({ sourceType: 'pair' });\r\n    }\r\n    get variables() {\r\n        return this.props.variables;\r\n    }\r\n    sourceTypeEditor() {\r\n        return React.createElement(\"div\", { className: \"pure-g\" },\r\n            React.createElement(\"div\", { className: \"pure-u-1-4 pure-u-lg-0\" }),\r\n            React.createElement(\"div\", { className: \"pure-u-3-4 pure-u-lg-1\" },\r\n                React.createElement(options_1.Options, { selected: this.state && this.state.sourceType, ide: this.props.ide, className: this.props.classes.options, onChange: a => this.setSourceType(a.value), options: this.sourceTypes() })));\r\n    }\r\n    remove(e, source) {\r\n        this.variables.splice(this.variables.indexOf(source), 1);\r\n        e.preventDefault();\r\n    }\r\n    sourceEditor(source, key, committed) {\r\n        let editor = this.props.sourceEditorFactory(source, new EditorState(this.variables, source, committed, this.state.sourceType));\r\n        return (React.createElement(\"div\", { className: this.props.classes.fieldBlock, key: key },\r\n            React.createElement(\"div\", { className: this.props.classes.editorDiv }, editor),\r\n            React.createElement(\"div\", { className: this.props.classes.optionSettings },\r\n                committed && this.deleteButton(source),\r\n                !committed && !this.props.onlyPairs && this.sourceTypeEditor())));\r\n    }\r\n    deleteButton(source) {\r\n        return React.createElement(\"div\", { className: \"pure-g\" },\r\n            React.createElement(\"div\", { className: \"pure-u-1-4 pure-u-lg-0\" }),\r\n            React.createElement(\"div\", { className: \"pure-u-3-4 pure-u-lg-1\" },\r\n                React.createElement(\"button\", { className: this.props.classes.deleteButton, onClick: e => this.remove(e, source) },\r\n                    React.createElement(fa_1.FaTimesCircle, null),\r\n                    \" Remove\")));\r\n    }\r\n    sourceEditors() {\r\n        let editors = [];\r\n        if (this.variables) {\r\n            for (let i = 0; i <= this.variables.length; i++) {\r\n                let source = undefined;\r\n                let committed = false;\r\n                if (i < this.variables.length) {\r\n                    source = this.variables[i];\r\n                    committed = true;\r\n                }\r\n                else {\r\n                    source = this.props.sourceFactory();\r\n                }\r\n                editors.push(this.sourceEditor(source, i, committed));\r\n            }\r\n        }\r\n        else {\r\n            editors.push(this.sourceEditor(this.props.sourceFactory(), 0, false));\r\n        }\r\n        return editors;\r\n    }\r\n    sourceTypes() {\r\n        return [\r\n            {\r\n                display: (React.createElement(fa_1.FaFileCode, null)),\r\n                value: 'pair'\r\n            },\r\n            {\r\n                display: (React.createElement(fa_1.FaFont, null)),\r\n                value: 'file'\r\n            }\r\n        ];\r\n    }\r\n    setSourceType(source) {\r\n        this.setState({ sourceType: source });\r\n    }\r\n    render() {\r\n        return (React.createElement(\"div\", null, this.sourceEditors()));\r\n    }\r\n};\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof React !== \"undefined\" && React.MouseEvent) === \"function\" ? _a : Object, typeof (_b = typeof workflow_1.KeyValueEntry !== \"undefined\" && workflow_1.KeyValueEntry) === \"function\" ? _b : Object]),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], VariablesEditor.prototype, \"remove\", null);\r\nVariablesEditor = tslib_1.__decorate([\r\n    injectSheet(jssStyles),\r\n    mobx_react_1.observer,\r\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\r\n], VariablesEditor);\r\nexports.VariablesEditor = VariablesEditor;\r\n",
dependencies: ["tslib","react","mobx","mobx-react","react-icons/fa","../options","../../models/workflow","../../style","react-jss"],
sourceMap: {},
headerContent: undefined,
mtime: 1535400689965,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
