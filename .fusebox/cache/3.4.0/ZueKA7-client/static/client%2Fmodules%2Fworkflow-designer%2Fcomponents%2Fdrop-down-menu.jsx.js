module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nconst React = require(\"react\");\r\nconst mobx_react_1 = require(\"mobx-react\");\r\nlet injectSheet = require('react-jss').default;\r\nconst hoverItem = {\r\n    color: '#000',\r\n    background: 'none',\r\n    fontWeight: '700'\r\n};\r\nconst hoverLabel = {\r\n    color: '#000',\r\n    background: 'none'\r\n};\r\nconst styles = (theme) => {\r\n    if (theme.ide) {\r\n        return {\r\n            container: {\r\n                composes: 'block padded'\r\n            },\r\n            menu: {\r\n                composes: 'btn-group'\r\n            },\r\n            button: {\r\n                composes: 'btn'\r\n            }\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            container: {\r\n                composes: 'pure-menu pure-menu-horizontal',\r\n                display: 'inline-block',\r\n                width: 'auto'\r\n            },\r\n            menuLabelContainer: {\r\n                composes: 'pure-menu pure-menu-horizontal'\r\n            },\r\n            menuLabel: {\r\n                composes: 'pure-menu-item pure-menu-has-children pure-menu-allow-hover',\r\n                background: 'none',\r\n                color: '#aaa',\r\n                fontWeight: 'bold',\r\n                '&:hover': hoverLabel,\r\n                '&:focus': hoverLabel\r\n            },\r\n            labelLink: {\r\n                composes: theme.ide ? \"\" : \"pure-button\",\r\n                textDecoration: 'none',\r\n                'a&': { color: '#444' },\r\n                '&:hover': theme.ide ? Object.assign({ cursor: \"pointer\" }, hoverLabel) : {},\r\n                '&:focus': hoverLabel\r\n            },\r\n            menuContainer: {\r\n                composes: 'pure-menu-children',\r\n                padding: '5px',\r\n                border: 'solid 1px #ccc',\r\n                zIndex: '10',\r\n                minWidth: '100%',\r\n                boxSizing: 'border-box',\r\n            },\r\n            item: {\r\n                composes: 'pure-menu-link',\r\n                padding: '10px 15px',\r\n                fontWeight: '500',\r\n                borderBottom: 'solid 3px transparent',\r\n                'a&': { color: '#444' },\r\n                '&:hover': hoverItem,\r\n                '&:focus': {\r\n                    background: 'none',\r\n                    color: '#444',\r\n                    fontWeight: '700'\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\nlet DropDownMenu = class DropDownMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    handleClick(e, item) {\r\n        if (item.onClick) {\r\n            item.onClick();\r\n        }\r\n        e.preventDefault();\r\n    }\r\n    item(item, key) {\r\n        let classes = this.props.classes || {};\r\n        return this.props.ide ?\r\n            (React.createElement(\"button\", { key: key, className: classes.button, onClick: e => this.handleClick(e, item) }, item.display)) :\r\n            (React.createElement(\"li\", { key: key, className: \"pure-menu-item\", onClick: e => this.handleClick(e, item) },\r\n                React.createElement(\"a\", { href: \"#\", className: classes.item }, item.display)));\r\n    }\r\n    render() {\r\n        let classes = this.props.classes || {};\r\n        return this.props.ide ?\r\n            (React.createElement(\"div\", null,\r\n                React.createElement(\"h3\", null,\r\n                    this.props.label,\r\n                    \":\"),\r\n                React.createElement(\"div\", { className: \"block\" },\r\n                    React.createElement(\"div\", { className: \"btn-group\" }, this.props.items && this.props.items.map((b, i) => this.item(b, i)))))) :\r\n            (React.createElement(\"div\", { className: classes.menuLabelContainer },\r\n                React.createElement(\"li\", { className: classes.menuLabel },\r\n                    React.createElement(\"a\", { className: classes.labelLink },\r\n                        this.props.label,\r\n                        \" \",\r\n                        React.createElement(\"span\", { className: \"Select-arrow\" })),\r\n                    React.createElement(\"ul\", { className: classes.menuContainer }, this.props.items && this.props.items.map((b, i) => this.item(b, i))))));\r\n    }\r\n};\r\nDropDownMenu = tslib_1.__decorate([\r\n    injectSheet(styles),\r\n    mobx_react_1.observer,\r\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\r\n], DropDownMenu);\r\nexports.DropDownMenu = DropDownMenu;\r\n",
dependencies: ["tslib","react","mobx-react","react-jss"],
sourceMap: {},
headerContent: undefined,
mtime: 1535400689770,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
