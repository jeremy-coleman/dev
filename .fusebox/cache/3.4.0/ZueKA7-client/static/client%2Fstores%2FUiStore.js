module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a;\r\nconst styles_1 = require(\"@material-ui/core/styles\");\r\nconst mobx_1 = require(\"mobx\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst _ = require(\"lodash\");\r\nexports.palette = {\r\n    myriad: {\r\n        primary: \"#F44336\",\r\n        secondary: \"#FFD740\",\r\n        background: \"#FFFFFF\",\r\n    },\r\n    ranger: {\r\n        primary: \"#2196F3\",\r\n        secondary: \"#FFE57F\",\r\n        background: \"#FFFFFF\",\r\n    },\r\n    velocity: {\r\n        primary: \"#FFA000\",\r\n        secondary: \"#607D8B\",\r\n        background: \"#FFFFFF\",\r\n    },\r\n};\r\nclass ToggleOpenValue {\r\n    constructor() {\r\n        this.open = false;\r\n        this.openDrawer = (open) => {\r\n            this.open = open;\r\n        };\r\n        this.closeDrawer = () => {\r\n            this.open = false;\r\n        };\r\n        this.toggleDrawer = () => {\r\n            this.open = !this.open;\r\n        };\r\n    }\r\n}\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], ToggleOpenValue.prototype, \"open\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], ToggleOpenValue.prototype, \"openDrawer\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], ToggleOpenValue.prototype, \"closeDrawer\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], ToggleOpenValue.prototype, \"toggleDrawer\", void 0);\r\nexports.ToggleOpenValue = ToggleOpenValue;\r\nclass TabValue {\r\n    constructor() {\r\n        this.tabValue = 0;\r\n    }\r\n    setTab(event, tabValue) {\r\n        this.tabValue = tabValue;\r\n    }\r\n}\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], TabValue.prototype, \"tabValue\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], TabValue.prototype, \"setTab\", null);\r\nexports.TabValue = TabValue;\r\nclass UiStore {\r\n    constructor() {\r\n        this.title = \"Coglite\";\r\n        this.themeId = \"myriad\";\r\n        this.themeDialogToggle = new ToggleOpenValue();\r\n        this.menuDrawerToggle = new ToggleOpenValue();\r\n        this.nodeDrawerToggle = new ToggleOpenValue();\r\n        this.nodeFormDrawerToggle = new ToggleOpenValue();\r\n        this.appBarSettingsMenuToggle = new ToggleOpenValue();\r\n        this.appTabs = new TabValue();\r\n        this.isThemeDialogOpen = false;\r\n        this.activeCogliteNodeModel = null;\r\n        this.diagramModel = null;\r\n        this.nodeFormsData = {};\r\n        this.isDynamicNodeFormUpdate = false;\r\n        this.onError = (error) => {\r\n            this.uiError = error;\r\n        };\r\n    }\r\n    get muiTheme() {\r\n        const basicTheme = styles_1.createMuiTheme({\r\n            palette: {\r\n                primary: {\r\n                    main: exports.palette[this.themeId].primary,\r\n                },\r\n                secondary: {\r\n                    main: exports.palette[this.themeId].secondary,\r\n                }\r\n            }\r\n        });\r\n        basicTheme[\"shape\"] = {\r\n            borderRadius: 4\r\n        };\r\n        return basicTheme;\r\n    }\r\n    get fabricTheme() {\r\n        let fabricTheme = office_ui_fabric_react_1.loadTheme({\r\n            palette: {\r\n                themePrimary: exports.palette[this.themeId].primary\r\n            }\r\n        });\r\n        return fabricTheme;\r\n    }\r\n    get combinedTheme() {\r\n        let combinedTheme = _.merge(this.muiTheme, this.fabricTheme);\r\n        return combinedTheme;\r\n    }\r\n    updateTheme(themeId) {\r\n        this.themeId = themeId;\r\n    }\r\n    updateActiveCogliteNodeModel(model) {\r\n        if (this.nodeFormDrawerToggle.open && (this.activeCogliteNodeModel.model.id !== model.model.id)) {\r\n            this.isDynamicNodeFormUpdate = true;\r\n        }\r\n        this.activeCogliteNodeModel = model;\r\n    }\r\n    openThemeDialog() {\r\n        this.isThemeDialogOpen = true;\r\n    }\r\n    closeThemeDialog() {\r\n        this.isThemeDialogOpen = false;\r\n    }\r\n    setDiagramModel(diagramModel) {\r\n        this.diagramModel = diagramModel;\r\n    }\r\n    updateNodeFormsData(nodeFormsData) {\r\n        this.nodeFormsData = nodeFormsData;\r\n    }\r\n}\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"title\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"themeId\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"themeDialogToggle\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"menuDrawerToggle\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"nodeDrawerToggle\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"nodeFormDrawerToggle\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"appBarSettingsMenuToggle\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"appTabs\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"isThemeDialogOpen\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"activeCogliteNodeModel\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"diagramModel\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"nodeFormsData\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"isDynamicNodeFormUpdate\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.computed,\r\n    tslib_1.__metadata(\"design:type\", Object),\r\n    tslib_1.__metadata(\"design:paramtypes\", [])\r\n], UiStore.prototype, \"muiTheme\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.computed,\r\n    tslib_1.__metadata(\"design:type\", Object),\r\n    tslib_1.__metadata(\"design:paramtypes\", [])\r\n], UiStore.prototype, \"fabricTheme\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.computed,\r\n    tslib_1.__metadata(\"design:type\", Object),\r\n    tslib_1.__metadata(\"design:paramtypes\", [])\r\n], UiStore.prototype, \"combinedTheme\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", [Object]),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], UiStore.prototype, \"updateTheme\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", [Object]),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], UiStore.prototype, \"updateActiveCogliteNodeModel\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", []),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], UiStore.prototype, \"openThemeDialog\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", []),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], UiStore.prototype, \"closeThemeDialog\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", [Object]),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], UiStore.prototype, \"setDiagramModel\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", [Object]),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], UiStore.prototype, \"updateNodeFormsData\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", typeof (_a = typeof Error !== \"undefined\" && Error) === \"function\" ? _a : Object)\r\n], UiStore.prototype, \"uiError\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], UiStore.prototype, \"onError\", void 0);\r\nexports.UiStore = UiStore;\r\n",
dependencies: ["tslib","@material-ui/core/styles","mobx","office-ui-fabric-react","lodash"],
sourceMap: {},
headerContent: undefined,
mtime: 1535435139881,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
