module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nconst React = require(\"react\");\r\nlet injectSheet = require('react-jss').default;\r\nconst mobx_1 = require(\"mobx\");\r\nconst mobx_react_1 = require(\"mobx-react\");\r\nconst centered_content_1 = require(\"../../util/centered-content\");\r\nconst translation_service_1 = require(\"../../services/translation-service\");\r\nconst styles = (theme) => ({\r\n    mountPath: {\r\n        composes: 'pure-u-1-6',\r\n        textAlign: 'right'\r\n    },\r\n    hostPath: {\r\n        composes: 'pure-u-1-6',\r\n        textAlign: 'right'\r\n    },\r\n    label: {\r\n        paddingRight: '5px'\r\n    },\r\n    input: {\r\n        composes: 'pure-input-1 code input-text native-key-bindings'\r\n    }\r\n});\r\nlet VolumeEditor = class VolumeEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    notifyChange() {\r\n        if (this.props.onChange) {\r\n            this.props.onChange();\r\n        }\r\n    }\r\n    setMountPath(name) {\r\n        this.props.volume.mountPath = name;\r\n        this.notifyChange();\r\n    }\r\n    setHostPath(value) {\r\n        this.props.volume.hostPath = value;\r\n        this.notifyChange();\r\n    }\r\n    render() {\r\n        let classes = this.props.classes || {};\r\n        return (React.createElement(\"div\", { className: \"pure-g\" },\r\n            React.createElement(\"label\", { className: classes.mountPath },\r\n                React.createElement(centered_content_1.CenteredContent, null,\r\n                    React.createElement(\"span\", { className: classes.label },\r\n                        translation_service_1.translate('LABEL_MOUNT_PATH'),\r\n                        \":\"))),\r\n            React.createElement(\"div\", { className: \"pure-u-1-3\" },\r\n                React.createElement(\"input\", { className: classes.input, type: \"text\", value: this.props.volume.mountPath, onChange: e => this.setMountPath(e.target.value) })),\r\n            React.createElement(\"label\", { className: classes.hostPath },\r\n                React.createElement(centered_content_1.CenteredContent, null,\r\n                    React.createElement(\"span\", { className: classes.label },\r\n                        translation_service_1.translate('LABEL_HOST_PATH'),\r\n                        \":\"))),\r\n            React.createElement(\"div\", { className: \"pure-u-1-3\" },\r\n                React.createElement(\"input\", { className: classes.input, type: \"text\", value: this.props.volume.hostPath, onChange: e => this.setHostPath(e.target.value) }))));\r\n    }\r\n};\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", [String]),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], VolumeEditor.prototype, \"setMountPath\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", [String]),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], VolumeEditor.prototype, \"setHostPath\", null);\r\nVolumeEditor = tslib_1.__decorate([\r\n    injectSheet(styles),\r\n    mobx_react_1.observer,\r\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\r\n], VolumeEditor);\r\nexports.VolumeEditor = VolumeEditor;\r\n",
dependencies: ["tslib","react","react-jss","mobx","mobx-react","../../util/centered-content","../../services/translation-service"],
sourceMap: {},
headerContent: undefined,
mtime: 1535400689971,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
