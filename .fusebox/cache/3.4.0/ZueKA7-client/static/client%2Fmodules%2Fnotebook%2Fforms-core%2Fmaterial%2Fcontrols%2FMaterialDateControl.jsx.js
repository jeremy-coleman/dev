module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nconst KeyboardArrowLeft_1 = require(\"@material-ui/icons/KeyboardArrowLeft\");\r\nconst KeyboardArrowRight_1 = require(\"@material-ui/icons/KeyboardArrowRight\");\r\nconst _ = require(\"lodash\");\r\nconst material_ui_pickers_1 = require(\"material-ui-pickers\");\r\nconst mobx_react_1 = require(\"mobx-react\");\r\nconst React = require(\"react\");\r\nconst core_1 = require(\"../../core\");\r\nconst react_1 = require(\"../../react\");\r\nclass MaterialDateControl extends react_1.Control {\r\n    render() {\r\n        const { description, id, errors, label, uischema, visible, enabled, required, path, handleChange, data, momentLocale } = this.props;\r\n        const isValid = errors.length === 0;\r\n        const trim = uischema.options && uischema.options.trim;\r\n        const showDescription = !core_1.isDescriptionHidden(visible, description, this.state.isFocused);\r\n        let style = {};\r\n        if (!visible) {\r\n            style = { display: 'none' };\r\n        }\r\n        const inputProps = {};\r\n        const localeDateTimeFormat = momentLocale ? `${momentLocale.localeData().longDateFormat('L')}`\r\n            : 'YYYY-MM-DD';\r\n        let labelText;\r\n        let labelCancel;\r\n        let labelClear;\r\n        if (core_1.isPlainLabel(label)) {\r\n            labelText = label;\r\n            labelCancel = 'Cancel';\r\n            labelClear = 'Clear';\r\n        }\r\n        else {\r\n            labelText = label.default;\r\n            labelCancel = _.startsWith(label.cancel, '%') ? 'Cancel' : label.cancel;\r\n            labelClear = _.startsWith(label.clear, '%') ? 'Clear' : label.clear;\r\n        }\r\n        return (React.createElement(material_ui_pickers_1.DatePicker, { id: id, label: core_1.computeLabel(labelText, required), error: !isValid, style: style, fullWidth: !trim, helperText: !isValid ? errors : showDescription ? description : null, InputLabelProps: { shrink: true }, value: data || null, onChange: datetime => console.log('broken bc moment is fucked'), format: localeDateTimeFormat, clearable: true, disabled: !enabled, autoFocus: uischema.options && uischema.options.focus, onClear: () => handleChange(path, ''), onFocus: this.onFocus, onBlur: this.onBlur, cancelLabel: labelCancel, clearLabel: labelClear, leftArrowIcon: React.createElement(KeyboardArrowLeft_1.default, null), rightArrowIcon: React.createElement(KeyboardArrowRight_1.default, null), InputProps: inputProps }));\r\n    }\r\n}\r\nexports.MaterialDateControl = MaterialDateControl;\r\nexports.addLabelProps = (mapStoreValuesToProps) => (state, ownProps) => {\r\n    const stateProps = mapStoreValuesToProps(state, ownProps);\r\n    return Object.assign({}, stateProps, { label: {\r\n            default: stateProps.label,\r\n            cancel: '%cancel',\r\n            clear: '%clear'\r\n        } });\r\n};\r\nexports.materialDateControlTester = core_1.rankWith(4, core_1.isDateControl);\r\nlet MaterializedDateControl = class MaterializedDateControl extends React.Component {\r\n    render() {\r\n        const effectiveProps = react_1.createPropsForItem(this.props, core_1.mapStoreValuesToControlProps, core_1.mapUpdateActionToControlProps);\r\n        return (React.createElement(MaterialDateControl, Object.assign({}, effectiveProps)));\r\n    }\r\n};\r\nMaterializedDateControl = tslib_1.__decorate([\r\n    mobx_react_1.inject(\"jsonFormsStore\"),\r\n    mobx_react_1.observer\r\n], MaterializedDateControl);\r\nexports.default = MaterializedDateControl;\r\n",
dependencies: ["tslib","@material-ui/icons/KeyboardArrowLeft","@material-ui/icons/KeyboardArrowRight","lodash","material-ui-pickers","mobx-react","react","../../core","../../react"],
sourceMap: {},
headerContent: undefined,
mtime: 1535400689544,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
