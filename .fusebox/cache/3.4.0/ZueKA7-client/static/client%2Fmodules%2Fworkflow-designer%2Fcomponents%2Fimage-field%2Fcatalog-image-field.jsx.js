module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nconst React = require(\"react\");\r\nconst react_virtualized_select_1 = require(\"react-virtualized-select\");\r\nconst mobx_1 = require(\"mobx\");\r\nconst mobx_react_1 = require(\"mobx-react\");\r\nlet injectSheet = require('react-jss').default;\r\nconst translation_service_1 = require(\"../../services/translation-service\");\r\nconst style_1 = require(\"../../style\");\r\nconst catalog_select_1 = require(\"./catalog-select\");\r\nconst centered_content_1 = require(\"../../util/centered-content\");\r\nconst jssStyles = (theme) => ({\r\n    editor: {\r\n        composes: 'pure-u-g'\r\n    },\r\n    title: {\r\n        composes: theme.ide ? 'text-color' : '',\r\n        padding: 0,\r\n        margin: 0,\r\n        fontSize: '20px',\r\n        fontWeight: 'bold',\r\n        lineHeight: '24px'\r\n    },\r\n    placeholder: {\r\n        composes: theme.ide ? 'text-color' : '',\r\n        padding: 0,\r\n        margin: 0,\r\n        fontSize: '16px',\r\n        lineHeight: '24px'\r\n    },\r\n    catalogSelectDiv: {\r\n        composes: 'pure-u-1 pure-u-lg-3-4 block-md'\r\n    },\r\n    catalogSelect: {\r\n        composes: style_1.editorStyles.largeSelect,\r\n        [style_1.mediaQueries.lg]: {\r\n            '& .Select-control': {\r\n                'border-right': 'none',\r\n                'border-top-right-radius': '0',\r\n                'border-bottom-right-radius': '0',\r\n            }\r\n        }\r\n    },\r\n    tagSelectDiv: {\r\n        composes: 'pure-u-1 pure-u-lg-1-4'\r\n    },\r\n    tagSelect: {\r\n        composes: style_1.editorStyles.largeSelect + ' VirtualizedSelect',\r\n        '& > .Select-control': {\r\n            height: '40px',\r\n            textAlign: 'center'\r\n        },\r\n        [style_1.mediaQueries.lg]: {\r\n            '& > .Select-control': {\r\n                height: '100px',\r\n                textAlign: 'inherit',\r\n                'border-top-left-radius': '0',\r\n                'border-bottom-left-radius': '0',\r\n            }\r\n        }\r\n    }\r\n});\r\nfunction parseImage(imageString) {\r\n    let tagSeparator = imageString.lastIndexOf(':');\r\n    return {\r\n        image: tagSeparator > 0 ? imageString.substring(0, tagSeparator) : imageString,\r\n        tag: tagSeparator > 0 ? imageString.substring(tagSeparator + 1) : ''\r\n    };\r\n}\r\nexports.parseImage = parseImage;\r\nlet CatalogImageField = class CatalogImageField extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onImageChange = (image) => {\r\n            this.props.step.image = image.name;\r\n        };\r\n        this.onTagChange = (tag) => {\r\n            let image = this.props.step.image;\r\n            if (image) {\r\n                image = parseImage(image).image;\r\n                if (!tag || tag === '') {\r\n                    tag = 'latest';\r\n                }\r\n                this.props.step.image = image + ':' + tag;\r\n            }\r\n        };\r\n        this.valueRenderer = (option) => {\r\n            return (React.createElement(centered_content_1.CenteredContent, { container: false },\r\n                React.createElement(\"div\", { className: this.props.classes.title }, option.value)));\r\n        };\r\n    }\r\n    get tags() {\r\n        let currentStep = this.props.step;\r\n        if (currentStep && currentStep.image && this.props.catalog) {\r\n            let currentImage = parseImage(currentStep.image).image;\r\n            let image = this.props.catalog.find(image => image.name === currentImage);\r\n            if (image) {\r\n                return image.tags.map(tag => ({ label: tag, value: tag }));\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    get image() {\r\n        if (this.props.step && this.props.step.image) {\r\n            let image = this.props.step.image;\r\n            return parseImage(image).image;\r\n        }\r\n        return '';\r\n    }\r\n    get tag() {\r\n        if (this.props.step && this.props.step.image) {\r\n            let image = this.props.step.image;\r\n            let tag = 'latest';\r\n            let tagSeparator = image.lastIndexOf(':');\r\n            if (tagSeparator > 0) {\r\n                tag = image.substring(tagSeparator + 1);\r\n            }\r\n            return tag;\r\n        }\r\n        return '';\r\n    }\r\n    placeholder() {\r\n        return (React.createElement(centered_content_1.CenteredContent, null,\r\n            React.createElement(\"div\", { className: this.props.classes.placeholder }, translation_service_1.translate('PLACEHOLDER_VERSION'))));\r\n    }\r\n    render() {\r\n        let classes = this.props.classes || {};\r\n        return (React.createElement(\"div\", { className: classes.editor },\r\n            React.createElement(\"div\", { className: classes.catalogSelectDiv },\r\n                React.createElement(catalog_select_1.CatalogSelect, { className: classes.catalogSelect, catalog: this.props.catalog, value: this.image, onChange: this.onImageChange })),\r\n            React.createElement(\"div\", { className: classes.tagSelectDiv },\r\n                React.createElement(react_virtualized_select_1.default, { className: classes.tagSelect, clearable: false, valueRenderer: this.valueRenderer, searchable: false, options: this.tags, optionHeight: 40, placeholder: this.placeholder(), maxHeight: 400, onChange: option => this.onTagChange(option.value), value: this.tag }))));\r\n    }\r\n};\r\ntslib_1.__decorate([\r\n    mobx_1.computed,\r\n    tslib_1.__metadata(\"design:type\", Object),\r\n    tslib_1.__metadata(\"design:paramtypes\", [])\r\n], CatalogImageField.prototype, \"tags\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], CatalogImageField.prototype, \"onImageChange\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], CatalogImageField.prototype, \"onTagChange\", void 0);\r\nCatalogImageField = tslib_1.__decorate([\r\n    injectSheet(jssStyles),\r\n    mobx_react_1.observer,\r\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\r\n], CatalogImageField);\r\nexports.CatalogImageField = CatalogImageField;\r\n",
dependencies: ["tslib","react","react-virtualized-select","mobx","mobx-react","react-jss","../../services/translation-service","../../style","./catalog-select","../../util/centered-content"],
sourceMap: {},
headerContent: undefined,
mtime: 1535400689788,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
