module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nconst ColorLens_1 = require(\"@material-ui/icons/ColorLens\");\r\nconst Menu_1 = require(\"@material-ui/icons/Menu\");\r\nconst IconButton_1 = require(\"@material-ui/core/IconButton\");\r\nconst Toolbar_1 = require(\"@material-ui/core/Toolbar\");\r\nconst mobx_1 = require(\"mobx\");\r\nconst mobx_react_1 = require(\"mobx-react\");\r\nconst React = require(\"react\");\r\nconst styled_jss_1 = require(\"styled-jss\");\r\nconst theming_1 = require(\"theming\");\r\nconst CommandBarDimensions = theming_1.withTheme(styled_jss_1.default('div')(({ theme }) => ({\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    position: \"relative\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    flexWrap: \"none\",\r\n    overflow: \"hidden !important\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText\r\n})));\r\nlet CommandBar = class CommandBar extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.setTarget = event => { this.currentClickTarget = event.target; };\r\n    }\r\n    render() {\r\n        const { menuDrawerToggle, themeDialogToggle } = this.props.store.uiStore;\r\n        const _commandBar = (React.createElement(CommandBarDimensions, null,\r\n            React.createElement(Toolbar_1.default, null,\r\n                React.createElement(IconButton_1.default, { color: \"inherit\", \"aria-label\": \"open drawer\", onClick: e => { menuDrawerToggle.openDrawer(true); } },\r\n                    React.createElement(Menu_1.default, null)),\r\n                React.createElement(\"div\", null,\r\n                    React.createElement(IconButton_1.default, { onClick: () => themeDialogToggle.toggleDrawer(), color: \"inherit\" }, React.createElement(ColorLens_1.default, null))))));\r\n        return _commandBar;\r\n    }\r\n};\r\ntslib_1.__decorate([\r\n    mobx_1.observable,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], CommandBar.prototype, \"currentClickTarget\", void 0);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Object)\r\n], CommandBar.prototype, \"setTarget\", void 0);\r\nCommandBar = tslib_1.__decorate([\r\n    mobx_react_1.inject(\"store\"),\r\n    mobx_react_1.observer\r\n], CommandBar);\r\nexports.CommandBar = CommandBar;\r\n",
dependencies: ["tslib","@material-ui/icons/ColorLens","@material-ui/icons/Menu","@material-ui/core/IconButton","@material-ui/core/Toolbar","mobx","mobx-react","react","styled-jss","theming"],
sourceMap: {},
headerContent: undefined,
mtime: 1535400689083,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
