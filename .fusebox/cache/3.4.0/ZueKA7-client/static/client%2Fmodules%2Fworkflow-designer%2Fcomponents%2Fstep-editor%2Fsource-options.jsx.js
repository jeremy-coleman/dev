module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b, _c;\r\nconst React = require(\"react\");\r\nconst mobx_1 = require(\"mobx\");\r\nconst mobx_react_1 = require(\"mobx-react\");\r\nlet injectSheet = require('react-jss').default;\r\nconst translation_service_1 = require(\"../../services/translation-service\");\r\nconst centered_content_1 = require(\"../../util/centered-content\");\r\nconst options_1 = require(\"../options\");\r\nconst react_select_1 = require(\"react-select\");\r\nconst style_1 = require(\"../../style\");\r\nconst styles = (theme) => ({\r\n    label: {\r\n        composes: 'input-label pure-u-1 pure-u-md-1-4 text-right',\r\n        paddingRight: '5px'\r\n    },\r\n    textCenter: {\r\n        textAlign: 'center'\r\n    }\r\n});\r\nlet SourceOptions = class SourceOptions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.promptTextCreator = (label) => {\r\n            return translation_service_1.translate('LABEL_VARIABLE_PROMPT', label);\r\n        };\r\n    }\r\n    get sourceOmitted() {\r\n        return this.props.step.omitSource === true;\r\n    }\r\n    get sourceTypes() {\r\n        return [\r\n            {\r\n                value: 'noSource',\r\n                display: (React.createElement(\"span\", null, translation_service_1.translate('OPTION_NOSOURCE')))\r\n            },\r\n            {\r\n                value: 'dockerignore',\r\n                display: (React.createElement(\"span\", null, translation_service_1.translate('OPTION_DOCKERIGNORE')))\r\n            },\r\n            {\r\n                value: 'includeExclude',\r\n                display: (React.createElement(\"span\", null, translation_service_1.translate('OPTION_INCLUDEEXCLUDE')))\r\n            },\r\n        ];\r\n    }\r\n    omitSource(e) {\r\n        this.props.step.omitSource = e.currentTarget.checked;\r\n    }\r\n    updateDockerignore(e) {\r\n        this.props.step.dockerignore = e.target.value;\r\n    }\r\n    setSourceType(type) {\r\n        this.props.step.transient.sourceType = type;\r\n    }\r\n    get currentSourceType() {\r\n        if (this.props.step.transient.sourceType) {\r\n            return this.props.step.transient.sourceType;\r\n        }\r\n        if (this.sourceOmitted) {\r\n            return 'noSource';\r\n        }\r\n        return ((this.props.step.sourceIncludes || []).length || (this.props.step.sourceExcludes || []).length) ?\r\n            'includeExclude' : 'dockerignore';\r\n    }\r\n    shouldKeyDownEventCreateNewOption(arg) {\r\n        return arg.keyCode === 32 || arg.keyCode === 9 || arg.keyCode === 13 || arg.keyCode === 188;\r\n    }\r\n    setSources(variables, arrayName) {\r\n        if (variables) {\r\n            let newVars = [];\r\n            for (let i = 0; i < variables.length; i++) {\r\n                newVars.push(variables[i].value);\r\n            }\r\n            this.props.step[arrayName] = newVars;\r\n            if (arrayName === 'sourceIncludes') {\r\n                this.props.step.transient.explicitSourceIncludes = true;\r\n            }\r\n            else {\r\n                this.props.step.transient.explicitSourceExcludes = true;\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let classes = this.props.classes || {};\r\n        let sourceIncludesArray = [];\r\n        let sourceExcludesArray = [];\r\n        this.props.step.sourceIncludes.forEach(sourceLine => sourceIncludesArray.push({ label: sourceLine, value: sourceLine }));\r\n        this.props.step.sourceExcludes.forEach(sourceLine => sourceExcludesArray.push({ label: sourceLine, value: sourceLine }));\r\n        return (React.createElement(\"div\", null, !this.sourceOmitted && (React.createElement(\"div\", null,\r\n            React.createElement(\"div\", { className: \"pure-u-1 block\" },\r\n                React.createElement(options_1.Options, { ide: this.props.ide, fill: true, options: this.sourceTypes, onChange: a => this.setSourceType(a.value), selected: this.currentSourceType })),\r\n            this.currentSourceType === 'noSource' &&\r\n                React.createElement(\"div\", { className: \"pure-g block\" },\r\n                    React.createElement(\"div\", { className: \"pure-u-1\" },\r\n                        React.createElement(\"div\", { className: classes.textCenter }, translation_service_1.translate('OPTION_OMIT_SOURCE')))),\r\n            this.currentSourceType === 'dockerignore' &&\r\n                React.createElement(\"div\", { className: \"pure-g\" },\r\n                    React.createElement(\"label\", { className: classes.label },\r\n                        React.createElement(centered_content_1.CenteredContent, null,\r\n                            React.createElement(\"span\", null,\r\n                                translation_service_1.translate('LABEL_DOCKERIGNORE'),\r\n                                \":\"))),\r\n                    React.createElement(\"div\", { className: \"pure-u-1 pure-u-md-3-4\" },\r\n                        React.createElement(\"input\", { className: 'pure-input-1 code input-text native-key-bindings', type: \"text\", value: this.props.step.dockerignore || '', onChange: e => this.updateDockerignore(e) }))),\r\n            this.currentSourceType === 'includeExclude' &&\r\n                React.createElement(\"div\", null,\r\n                    React.createElement(\"div\", { className: \"pure-g block\" },\r\n                        React.createElement(\"label\", { className: this.props.classes.label },\r\n                            React.createElement(centered_content_1.CenteredContent, null,\r\n                                React.createElement(\"span\", null,\r\n                                    translation_service_1.translate('LABEL_SOURCE_INCLUDES'),\r\n                                    \":\"))),\r\n                        React.createElement(\"div\", { className: \"pure-u-3-4\" },\r\n                            React.createElement(react_select_1.Creatable, { className: `${style_1.editorStyles.normalSelect} native-key-bindings`, inputProps: { className: this.props.classes.selectInput }, shouldKeyDownEventCreateNewOption: this.shouldKeyDownEventCreateNewOption, multi: true, clearable: true, placeholder: translation_service_1.translate('PLACEHOLDER_SOURCE_INCLUDES'), noResultsText: translation_service_1.translate('INSTRUCTION_SOURCE_INCLUDES'), promptTextCreator: this.promptTextCreator, value: sourceIncludesArray, onChange: p => this.setSources(p, 'sourceIncludes') }))),\r\n                    React.createElement(\"div\", { className: \"pure-g block\" },\r\n                        React.createElement(\"label\", { className: this.props.classes.label },\r\n                            React.createElement(centered_content_1.CenteredContent, null,\r\n                                React.createElement(\"span\", null,\r\n                                    translation_service_1.translate('LABEL_SOURCE_EXCLUDES'),\r\n                                    \":\"))),\r\n                        React.createElement(\"div\", { className: \"pure-u-3-4\" },\r\n                            React.createElement(react_select_1.Creatable, { className: `${style_1.editorStyles.normalSelect} native-key-bindings`, inputProps: { className: this.props.classes.selectInput }, shouldKeyDownEventCreateNewOption: this.shouldKeyDownEventCreateNewOption, multi: true, clearable: true, placeholder: translation_service_1.translate('PLACEHOLDER_SOURCE_EXCLUDES'), noResultsText: translation_service_1.translate('INSTRUCTION_SOURCE_EXCLUDES'), promptTextCreator: this.promptTextCreator, value: sourceExcludesArray, onChange: p => this.setSources(p, 'sourceExcludes') }))))))));\r\n    }\r\n};\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof React !== \"undefined\" && React.ChangeEvent) === \"function\" ? _a : Object]),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], SourceOptions.prototype, \"omitSource\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof React !== \"undefined\" && React.ChangeEvent) === \"function\" ? _b : Object]),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], SourceOptions.prototype, \"updateDockerignore\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", [String]),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], SourceOptions.prototype, \"setSourceType\", null);\r\ntslib_1.__decorate([\r\n    mobx_1.action,\r\n    tslib_1.__metadata(\"design:type\", Function),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_c = typeof react_select_1.Option !== \"undefined\" && react_select_1.Option) === \"function\" ? _c : Object, String]),\r\n    tslib_1.__metadata(\"design:returntype\", void 0)\r\n], SourceOptions.prototype, \"setSources\", null);\r\nSourceOptions = tslib_1.__decorate([\r\n    injectSheet(styles),\r\n    mobx_react_1.observer,\r\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\r\n], SourceOptions);\r\nexports.SourceOptions = SourceOptions;\r\n",
dependencies: ["tslib","react","mobx","mobx-react","react-jss","../../services/translation-service","../../util/centered-content","../options","react-select","../../style"],
sourceMap: {},
headerContent: undefined,
mtime: 1535400689935,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
